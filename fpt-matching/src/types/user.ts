import { BaseEntity } from "./_base/base";
import { Blog } from "./blog";
import { BlogCv } from "./blog-cv";
import { Department, Gender } from "./enums/user";
import { Topic } from "./topic";
import { Invitation } from "./invitation";
import { Like } from "./like";
import { NotificationXUser } from "./notification-x-user";
import { ProfileStudent } from "./profile-student";
import { Project } from "./project";
import { RefreshToken } from "./refresh-token";
import { Review } from "./review";
import { SkillProfile } from "./skill-profile";
import { TeamMember } from "./team-member";
import { UserXRole } from "./user-x-role";
import { TopicRequest } from "@/types/topic-request";
import { TopicVersionRequest } from "@/types/topic-version-request";

export interface User extends BaseEntity {
  gender?: Gender;
  cache?: string;
  username?: string;
  password?: string;
  avatar?: string;
  firstName?: string;
  lastName?: string;
  code?: string;
  email?: string;
  dob?: Date;
  phone?: string;
  address?: string;
  department?: Department;
  profileStudent?: ProfileStudent;
  blogs?: Blog[];
  topicRequestOfReviewers?: TopicRequest[];
  topicOfOwners?: Topic[];
  topicOfMentors?: Topic[];
  topicOfSubMentors?: Topic[];
  topicVersionRequestOfReviewers?: TopicVersionRequest[];
  userXRoles?: UserXRole[];
  comments?: Comment[];
  invitationOfSenders?: Invitation[];
  invitationOfReceivers?: Invitation[];
  blogCvs?: BlogCv[];
  likes?: Like[];
  projects?: Project[];
  refreshTokens?: RefreshToken[];
  skillProfiles?: SkillProfile[];
  teamMembers?: TeamMember[];
  reviewer1s?: Review[];
  reviewer2s?: Review[];
  notifications?: Notification[];
  notificationXUsers?: NotificationXUser[];
}
